//
//  MessagesViewController.swift
//  MessageEnhancer MessagesExtension
//
//  Created by Logan Orr on 1/28/23.
//

import UIKit
import Messages

class MessagesViewController: MSMessagesAppViewController, UITextFieldDelegate {
    @IBOutlet weak var input_field: UITextField!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view.
//        self.MSMessagesAppPresentationStyle = .expanded
        self.requestPresentationStyle(MSMessagesAppPresentationStyle.expanded)
//        if self.presentationStyle == MSMessagesAppPresentationStyle.expanded {
//           self.requestPresentationStyle(MSMessagesAppPresentationStyle.compact)
//        }
    }
    
    // MARK: - Conversation Handling
    
    override func willBecomeActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the inactive to active state.
        // This will happen when the extension is about to present UI.
        
        // Use this method to configure the extension and restore previously stored state.
    }
    
    override func didResignActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the active to inactive state.
        // This will happen when the user dismisses the extension, changes to a different
        // conversation or quits Messages.
        
        // Use this method to release shared resources, save user data, invalidate timers,
        // and store enough state information to restore your extension to its current state
        // in case it is terminated later.
    }
   
    override func didReceive(_ message: MSMessage, conversation: MSConversation) {
        // Called when a message arrives that was generated by another instance of this
        // extension on a remote device.
        
        // Use this method to trigger UI updates in response to the message.
    }
    
    override func didStartSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user taps the send button.
    }
    
    override func didCancelSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user deletes the message without sending it.
    
        // Use this to clean up state related to the deleted message.
    }
    
    override func willTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called before the extension transitions to a new presentation style.
    
        // Use this method to prepare for the change in presentation style.
    }
    
    override func didTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called after the extension transitions to a new presentation style.
    
        // Use this method to finalize any behaviors associated with the change in presentation style.
        if case .expanded = presentationStyle {
            input_field.becomeFirstResponder()
        }
    }
    
    func textFieldShouldBeginEditing(_ textField: UITextField) -> Bool {
        switch presentationStyle {
        case .compact:
            requestPresentationStyle(.expanded)
            return false
        case .expanded:
            return true
        default:
            return false
        }
    }

    @IBAction func submit_clicked(_ sender: Any) {
        Task {
            let new_message = await GPTTEXTClient().generate(message: input_field.text!)
            if let new_message = new_message {
                requestPresentationStyle(.compact)
                DispatchQueue.main.async {
                    if let conversation = self.activeConversation {
                        conversation.insertText(new_message, completionHandler: { (error) in
                            if let error = error {
                                print(error)
                            }
                        })
                    }
                }
            }
        }
    }
}
